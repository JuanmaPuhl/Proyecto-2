{
  "vertexSource": "#version 300 es \n\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 normalMatrix;\n\n\n\nin vec3 vertexPosition;\nin vec3 vertexNormal;\n\nout vec3 vNE; //Vector normal en espacio ojo\nout vec3 vLE; //Vector de direccion de luz\nout vec3 vVE; //Vector de vista (al ojo)\n\nuniform vec4 posL; //Posicion luz\nvoid main(void){\n    mat4 MV =  viewMatrix * modelMatrix;\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(vertexPosition, 1.0);\n    \n    vec3 posVE = vec3(MV*vec4(vertexPosition,1.0));\n    vLE = normalize(vec3(posL-vec4(posVE,1.0)));\n    \n    mat4 MN = normalMatrix;\n    //Transformar normal del espacio objeto al ojo\n    vNE = normalize(vec3(MN * vec4(vertexNormal,0.0)));\n    \n    //Calcular el vector del ojo en espacio del ojo; el ojo, por def esta en el origen.\n    vVE= normalize(-posVE);\n    \n}",
  "fragmentSource": "#version 300 es\nprecision highp float;\n\nin vec3 vNE; \nin vec3 vLE;\nin vec3 vVE;\nout vec4 colorFrag;\nuniform vec4 ka;\nuniform float coefEspec;\nuniform vec4 kd;\nuniform vec4 ks;\n\nvoid main(){\n    vec3 N = normalize(vNE);\n    vec3 L = normalize(vLE);\n    vec3 V = normalize(vVE);\n    vec3 H = normalize(L+V);\n    //Calculo termino difuso + espec de Blinn-Phong\n    float difuso = max(dot(L,N),0.0) ;\n    float specBlinnPhong = pow(max(dot(N,H),0.0),coefEspec);\n    if(dot(L,N)< 0.0){\n        specBlinnPhong = 0.0;\n    }\n  \tcolorFrag = ka + kd*difuso + ks*specBlinnPhong;\n   \n}",
  "model": "sphere",
  "uniforms": [
    {
      "name": "posL",
      "type": "vec4",
      "value": [
        0,
        0,
        0,
        1
      ]
    },
    {
      "name": "ka",
      "type": "vec4",
      "value": [
        0.4000000059604645,
        0.10000000149011612,
        0.30000001192092896,
        1
      ]
    },
    {
      "name": "coefEspec",
      "type": "float",
      "value": 89.6
    },
    {
      "name": "kd",
      "type": "vec4",
      "value": [
        0.30000001192092896,
        0.30000001192092896,
        0.20000000298023224,
        1
      ]
    },
    {
      "name": "ks",
      "type": "vec4",
      "value": [
        1,
        1,
        1,
        1
      ]
    }
  ]
}