{
  "vertexSource": "#version 300 es \n\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 normalMatrix;\n\n\n\nin vec3 vertexPosition;\nin vec3 vertexNormal;\n\nout vec3 vNE; //Vector normal en espacio ojo\nout vec3 vLE; //Vector de direccion de luz\nout vec3 vVE; //Vector de vista (al ojo)\n\nuniform vec4 posL; //Posicion luz\nvoid main(void){\n    mat4 MV =  viewMatrix * modelMatrix;\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(vertexPosition, 1.0);\n    \n    vec3 posVE = vec3(MV*vec4(vertexPosition,1.0));\n    vLE = normalize(vec3(posL-vec4(posVE,1.0)));\n    \n    mat4 MN = normalMatrix;\n    //Transformar normal del espacio objeto al ojo\n    vNE = normalize(vec3(MN * vec4(vertexNormal,0.0)));\n    \n    //Calcular el vector del ojo en espacio del ojo; el ojo, por def esta en el origen.\n    vVE= normalize(-posVE);\n    \n    \n    \n}",
  "fragmentSource": "#version 300 es\n#define PI 3.1415926535897932384626433832795\nprecision highp float;\n\nin vec3 vNE; \nin vec3 vLE;\nin vec3 vVE;\nout vec4 colorFrag;\nuniform vec4 ka;\nuniform float coefEspec;\nuniform vec4 kd;\nuniform vec4 ks;\n\nuniform vec4 pd;\nuniform vec4 ps;\nuniform float ax;\nuniform float ay;\n\nvoid main(){\n    float PHI =3.141516;\n    vec3 N = normalize(vNE);\n    vec3 L = normalize(vLE);\n    vec3 V = normalize(vVE);\n    vec3 H = normalize(L+V);\n    //Calculo termino difuso + espec de Blinn-Phong\n    float difuso = max(dot(L,N),0.0) ;\n    float specBlinnPhong = pow(max(dot(N,H),0.0),coefEspec);\n    if(dot(L,N)< 0.0){\n        specBlinnPhong = 0.0;\n    }\n    float cosenoH = pow(dot(N,H)/(length(N)*length(H)),2.0);\n    float senoH = dot((N*H),(N*H));\n    vec4 tangente  = vec4((N*H*(cosenoH/pow(ax,2.0)+senoH/pow(ay,2.0))/max(dot(N,H),0.0)),0.0);\n    float tangenteCuadrada =max(dot(tangente,tangente),0.0);\n    \n    float exponencial = exp(-tangenteCuadrada);\n   \tfloat dividir = 4.0*PI*ax*ay;\n    //colorFrag  = pd/PHI+ps/(sqrt(dot(N,L)*dot(N,H))/(length(L)*length(H)))*exponencial/dividir;\n    //colorFrag = ka + kd*difuso + ks*specBlinnPhong;\n    //colorFrag = (pd/PHI+ps/(sqrt(cos(length(L))*cos(length(H)))))*exp(-pow(tan(length(H)),2.0*(pow(cos(length(H)),2.0))/pow(ax,2.0)+pow(sin(length(H)),2.0)/pow(ay,2.0)));\n\t\n    \n    //float titaH = acos(dot(N,H)/(length(N)*length(H))) ;\n    //float titaI = acos(dot(N,L)/(length(N)*length(L)));\n    \n    float titaH = max(dot(N,H),0.0);\n    float titaI = max(dot(N,L),0.0);\n    float coseno = pow(titaH,2.0);\n    float seno = pow(length(N*L),2.0);\n    float exponencial2 = exp(-pow(tan(titaH*(coseno/pow(ax,2.0)+seno/pow(ay,2.0))),2.0));\n    float termino = exponencial2/dividir;\n\t\n    vec4 fresnelEspec = ps/(sqrt(titaI*titaH)) * termino;\n    vec4 fresnelDifuso =  pd/PI;\n    vec4 fresnel = fresnelDifuso * difuso + fresnelEspec * specBlinnPhong;\n    \n    //colorFrag = titaI*( ka+fresnel) ;\n\t\n    \n    \n    //Variables de la atenuacion geometrica\n  \n  \n    float Beckmann;\n    \n    //Termino de Fresnel \n    float F0 = 0.8;\n    float Fres = pow(1.0 - titaH, 5.0);\n    Fres *= (1.0 - F0);\n\tFres += F0;\n\n    \n    \n    //Termino de Beackmann\n \tfloat coeficienteA = 0.01;\n    float divisor = pow(coeficienteA,2.0)* pow(titaH,4.0);\n    float exponente = -(pow(tan(acos(titaH))/coeficienteA,2.0));\n    exponente = exp(exponente);\n    Beckmann = exponente/divisor;\n    \n    //Variables de la atenuacion geometrica\n \tfloat GCT;\n    float Ge;\n    float Gs;\n    float titaV = max(dot(V,H),0.0);\n    Ge = (2.0*titaH*titaV)/(titaV);\n    Gs = (2.0*titaH*titaI)/(titaV);\n    \n    GCT=min(1.0,Ge);\n    GCT=min(GCT,Gs);\n    \n   // colorFrag = vec4((Fres*Beckmann*GCT/3.141516)/(3.141516 * dot(N,V) * dot(N,L)));\n\t//colorFrag = kd*(Fres/3.141516)+ks*(Beckmann*GCT)/(dot(N,V)*dot(N,L));\n\tcolorFrag = ka +kd*difuso +ks*(Fres/3.141516)* (Beckmann*GCT)/(dot(N,V)*dot(N,L));\n}",
  "model": "teapot",
  "uniforms": [
    {
      "name": "posL",
      "type": "vec4",
      "value": [
        0,
        5,
        0,
        1
      ]
    },
    {
      "name": "ka",
      "type": "vec4",
      "value": [
        0.25,
        0.25,
        0.25,
        1
      ]
    },
    {
      "name": "coefEspec",
      "type": "float",
      "value": 89.6
    },
    {
      "name": "kd",
      "type": "vec4",
      "value": [
        0.6000000238418579,
        0.30000001192092896,
        0.20000000298023224,
        1
      ]
    },
    {
      "name": "ks",
      "type": "vec4",
      "value": [
        0.7699999809265137,
        0.7699999809265137,
        0.7699999809265137,
        1
      ]
    },
    {
      "name": "ax",
      "type": "float",
      "value": 0.8
    },
    {
      "name": "ay",
      "type": "float",
      "value": 0.2
    }
  ]
}